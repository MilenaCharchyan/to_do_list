{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: [{\n    id: 1,\n    name: \"tas1\",\n    description: \"tasts\",\n    done: true\n  }, {\n    id: 2,\n    name: \"tas2\",\n    description: \"tasts\",\n    done: false\n  }, {\n    id: 3,\n    name: \"tas3\",\n    description: \"tasts\",\n    done: false\n  }]\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: (state, action) => {\n      log;\n      state.tasks.push(action.payload);\n    },\n    toggleDone: (state, action) => {\n      const task = state.tasks.find(task => task.id === action.payload);\n      if (task) {\n        task.done = !task.done;\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTask,\n  toggleDone,\n  deleteTask\n} = taskSlice.actions;\nexport const selectTask = state => state.task;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","id","name","description","done","taskSlice","reducers","addTask","state","action","log","push","payload","toggleDone","task","find","deleteTask","filter","actions","selectTask","reducer"],"sources":["/Users/milenacharchyan/Desktop/list/src/features/task/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ITask } from \"../../type/type\";\nimport { RootState } from \"../../app/store\";\nconst initialState: { tasks: ITask[] } = {\n    tasks: [\n        {id: 1, name: \"tas1\", description: \"tasts\", done: true},\n        {id: 2, name: \"tas2\", description: \"tasts\", done: false},\n        {id: 3, name: \"tas3\", description: \"tasts\", done: false},\n    ]\n};\nconst taskSlice = createSlice({\n    name: 'tasks',\n    initialState,\n    reducers: {\n        addTask: (state, action: PayloadAction<ITask>) => {\n            log\n            state.tasks.push(action.payload);\n        },\n        toggleDone: (state, action: PayloadAction<number>) => {\n            const task = state.tasks.find((task) => task.id === action.payload);\n            if (task) {\n                task.done = !task.done;\n\n            }\n        },\n        deleteTask: (state, action: PayloadAction<number>) => {\n            state.tasks = state.tasks.filter(task => task.id !== action.payload)\n        },\n    },\n});\n\nexport const { addTask, toggleDone, deleteTask } = taskSlice.actions;\nexport const selectTask = (state: RootState) => state.task\nexport default taskSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,MAAMC,YAAgC,GAAG;EACrCC,KAAK,EAAE,CACH;IAACC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAI,CAAC,EACvD;IAACH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAK,CAAC,EACxD;IAACH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,OAAO;IAAEC,IAAI,EAAE;EAAK,CAAC;AAEhE,CAAC;AACD,MAAMC,SAAS,GAAGP,WAAW,CAAC;EAC1BI,IAAI,EAAE,OAAO;EACbH,YAAY;EACZO,QAAQ,EAAE;IACNC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA4B,KAAK;MAC9CC,GAAG;MACHF,KAAK,CAACR,KAAK,CAACW,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACpC,CAAC;IACDC,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MAClD,MAAMK,IAAI,GAAGN,KAAK,CAACR,KAAK,CAACe,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACb,EAAE,KAAKQ,MAAM,CAACG,OAAO,CAAC;MACnE,IAAIE,IAAI,EAAE;QACNA,IAAI,CAACV,IAAI,GAAG,CAACU,IAAI,CAACV,IAAI;MAE1B;IACJ,CAAC;IACDY,UAAU,EAAEA,CAACR,KAAK,EAAEC,MAA6B,KAAK;MAClDD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACiB,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACb,EAAE,KAAKQ,MAAM,CAACG,OAAO,CAAC;IACxE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEL,OAAO;EAAEM,UAAU;EAAEG;AAAW,CAAC,GAAGX,SAAS,CAACa,OAAO;AACpE,OAAO,MAAMC,UAAU,GAAIX,KAAgB,IAAKA,KAAK,CAACM,IAAI;AAC1D,eAAeT,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}