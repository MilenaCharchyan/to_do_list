{"ast":null,"code":"var _jsxFileName = \"/Users/milenacharchyan/Desktop/list/src/pages/AddTask/index.tsx\";\n// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { Task } from \"../../store/type\";\n// import { addTask } from \"../../store/task/action\";\n// import { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router\";\n\nimport React from \"react\";\n\n// export const AddTask: React.FC = React.memo((): JSX.Element => {\n//   const { register, handleSubmit, formState: { errors }, reset } = useForm<Task>();\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const save = (data: Task) => {\n//     dispatch(addTask({ ...data, id: Date.now(), done: false }));\n//     reset();\n//     navigate('/');\n//   };\n\n//   return (\n//     <div>\n//       <h3>Add Task</h3>\n//       <form onSubmit={handleSubmit(save)}>\n//         <div className=\"inps\">\n//           <input \n//             placeholder=\"Task Name\" \n//             {...register('name', { required: 'Enter Task Name' })} \n//           />\n//           {errors.name && <p>{errors.name.message}</p>}\n\n//           <input \n//             placeholder=\"Description\" \n//             {...register('description', { required: 'Enter Description' })} \n//           />\n//           {errors.description && <p>{errors.description.message}</p>}\n\n//           <button>Add Task</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddTask = /*#__PURE__*/React.memo(_c = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n});\n_c2 = AddTask;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddTask$React.memo\");\n$RefreshReg$(_c2, \"AddTask\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AddTask","memo","_c","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/milenacharchyan/Desktop/list/src/pages/AddTask/index.tsx"],"sourcesContent":["// import React from \"react\";\n// import { useForm } from \"react-hook-form\";\n// import { Task } from \"../../store/type\";\n// import { addTask } from \"../../store/task/action\";\n// import { useDispatch } from \"react-redux\";\n// import { useNavigate } from \"react-router\";\n\nimport React from \"react\";\n\n// export const AddTask: React.FC = React.memo((): JSX.Element => {\n//   const { register, handleSubmit, formState: { errors }, reset } = useForm<Task>();\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const save = (data: Task) => {\n//     dispatch(addTask({ ...data, id: Date.now(), done: false }));\n//     reset();\n//     navigate('/');\n//   };\n\n//   return (\n//     <div>\n//       <h3>Add Task</h3>\n//       <form onSubmit={handleSubmit(save)}>\n//         <div className=\"inps\">\n//           <input \n//             placeholder=\"Task Name\" \n//             {...register('name', { required: 'Enter Task Name' })} \n//           />\n//           {errors.name && <p>{errors.name.message}</p>}\n          \n//           <input \n//             placeholder=\"Description\" \n//             {...register('description', { required: 'Enter Description' })} \n//           />\n//           {errors.description && <p>{errors.description.message}</p>}\n          \n//           <button>Add Task</button>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// });\nexport const AddTask: React.FC = React.memo((): JSX.Element => {\n    return(\n        <div></div>\n    )\n})"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,OAAiB,gBAAGH,KAAK,CAACI,IAAI,CAAAC,EAAA,GAACA,CAAA,KAAmB;EAC3D,oBACIH,OAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAEnB,CAAC,CAAC;AAAAC,GAAA,GAJWP,OAAiB;AAAA,IAAAE,EAAA,EAAAK,GAAA;AAAAC,YAAA,CAAAN,EAAA;AAAAM,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}