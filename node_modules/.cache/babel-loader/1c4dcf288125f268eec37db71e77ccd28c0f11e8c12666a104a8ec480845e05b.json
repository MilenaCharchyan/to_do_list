{"ast":null,"code":"var _jsxFileName = \"/Users/milenacharchyan/Desktop/list/src/pages/Tasks/index.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { deleteTask, selectTask, toggleDone } from \"../../features/task/taskSlice\";\nimport { useDispatch } from \"react-redux\";\nimport '';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n  const {\n    tasks\n  } = useAppSelector(selectTask); //useappselectori ognutyamb reduxic vercnum enq tvyalnery\n  console.log(tasks);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \" Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: tasks.map(elm => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: elm.done,\n            onChange: () => dispatch(toggleDone(elm.id))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: elm.done ? {\n              textDecoration: 'line-through'\n            } : {\n              textDecoration: \"none\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: elm.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 33\n            }, this), \" -\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: elm.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => dispatch(deleteTask(elm.id)),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)]\n        }, elm.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}, \"7sAlIv8K6WchBGEe6haGMElQrYE=\", false, function () {\n  return [useAppSelector, useDispatch];\n})), \"7sAlIv8K6WchBGEe6haGMElQrYE=\", false, function () {\n  return [useAppSelector, useDispatch];\n});\n_c2 = Task;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task$React.memo\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"names":["React","useAppSelector","deleteTask","selectTask","toggleDone","useDispatch","jsxDEV","_jsxDEV","Task","_s","memo","_c","tasks","console","log","dispatch","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","elm","type","checked","done","onChange","id","style","textDecoration","name","description","onClick","_c2","$RefreshReg$"],"sources":["/Users/milenacharchyan/Desktop/list/src/pages/Tasks/index.tsx"],"sourcesContent":["\nimport React from \"react\"\nimport { useAppSelector } from \"../../app/hooks\"\nimport { deleteTask, selectTask, toggleDone } from \"../../features/task/taskSlice\"\nimport { ITask } from \"../../type/type\";\nimport { useDispatch } from \"react-redux\";\nimport ''\nexport const Task: React.FC = React.memo((): JSX.Element => {\n    const { tasks } = useAppSelector(selectTask);//useappselectori ognutyamb reduxic vercnum enq tvyalnery\n    console.log(tasks);\n    const dispatch = useDispatch()\n\n    return (\n        <div>\n            <h4> Task</h4>\n            <div className=\"tasks\">\n                {tasks.map((elm: ITask) => {\n                    return (\n                        <div key={elm.id}>\n                            <input type=\"checkbox\" checked={elm.done} onChange={()=>dispatch(toggleDone(elm.id))}/>\n                            <div style={elm.done?{ textDecoration: 'line-through' } : {textDecoration:\"none\"}}>\n                                <span>{elm.name}</span> - \n                                <span>{elm.description}</span>\n                            </div>\n                            <button onClick={() => dispatch(deleteTask(elm.id))}>&times;</button>\n                        </div>\n\n                    )\n                })}\n            </div>\n        </div>\n    )\n})"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,iBAAiB;AAChD,SAASC,UAAU,EAAEC,UAAU,EAAEC,UAAU,QAAQ,+BAA+B;AAElF,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,EAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACT,OAAO,MAAMC,IAAc,gBAAAC,EAAA,cAAGT,KAAK,CAACU,IAAI,CAAAC,EAAA,GAAAF,EAAA,CAAC,MAAmB;EAAAA,EAAA;EACxD,MAAM;IAAEG;EAAM,CAAC,GAAGX,cAAc,CAACE,UAAU,CAAC,CAAC;EAC7CU,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,MAAMG,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,oBACIE,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdb,OAAA;MAAKc,SAAS,EAAC,OAAO;MAAAL,QAAA,EACjBJ,KAAK,CAACU,GAAG,CAAEC,GAAU,IAAK;QACvB,oBACIhB,OAAA;UAAAS,QAAA,gBACIT,OAAA;YAAOiB,IAAI,EAAC,UAAU;YAACC,OAAO,EAAEF,GAAG,CAACG,IAAK;YAACC,QAAQ,EAAEA,CAAA,KAAIZ,QAAQ,CAACX,UAAU,CAACmB,GAAG,CAACK,EAAE,CAAC;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACvFb,OAAA;YAAKsB,KAAK,EAAEN,GAAG,CAACG,IAAI,GAAC;cAAEI,cAAc,EAAE;YAAe,CAAC,GAAG;cAACA,cAAc,EAAC;YAAM,CAAE;YAAAd,QAAA,gBAC9ET,OAAA;cAAAS,QAAA,EAAOO,GAAG,CAACQ;YAAI;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,MACvB,eAAAb,OAAA;cAAAS,QAAA,EAAOO,GAAG,CAACS;YAAW;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC,eACNb,OAAA;YAAQ0B,OAAO,EAAEA,CAAA,KAAMlB,QAAQ,CAACb,UAAU,CAACqB,GAAG,CAACK,EAAE,CAAC,CAAE;YAAAZ,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAN/DG,GAAG,CAACK,EAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOX,CAAC;MAGd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;EAAA,QAxBqBnB,cAAc,EAEfI,WAAW;AAAA,EAsB/B,CAAC;EAAA,QAxBoBJ,cAAc,EAEfI,WAAW;AAAA,EAsB9B;AAAA6B,GAAA,GAzBW1B,IAAc;AAAA,IAAAG,EAAA,EAAAuB,GAAA;AAAAC,YAAA,CAAAxB,EAAA;AAAAwB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}