{"ast":null,"code":"var _jsxFileName = \"/Users/milenacharchyan/Desktop/list/src/pages/AddTask/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { addTask } from \"../../features/task/taskSlice\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport { useForm } from \"react-hook-form\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object({\n  name: Yup.string().required('Task name is required'),\n  description: Yup.string().max(200, 'Description must be at most 200 characters long').required(\"....\")\n});\nexport const AddTask = /*#__PURE__*/_s(/*#__PURE__*/React.memo(_c = _s(() => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [errors, setErrors] = useState({});\n  const handleAddTask = async data => {\n    try {\n      await validationSchema.validate(data, {\n        abortEarly: false\n      });\n      dispatch(addTask({\n        ...data,\n        done: false,\n        id: Date.now()\n      }));\n      reset();\n      setErrors({});\n    } catch (err) {\n      if (err instanceof Yup.ValidationError) {\n        const newErrors = {};\n        err.inner.forEach(error => {\n          if (error.path === 'name') newErrors.name = error.message;\n          if (error.path === 'description') newErrors.description = error.message;\n        });\n        setErrors(newErrors);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(handleAddTask),\n    className: \"add-task-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"add Tas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Task Name\",\n      ...register('name'),\n      className: \"input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      placeholder: \"Task Description\",\n      ...register('description'),\n      className: \"textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), errors.description && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error\",\n      children: errors.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"add-task-btn\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}, \"byzhwVrMaDAvL/cqq+rAJ5Rjo+s=\", false, function () {\n  return [useDispatch, useForm];\n})), \"byzhwVrMaDAvL/cqq+rAJ5Rjo+s=\", false, function () {\n  return [useDispatch, useForm];\n});\n_c2 = AddTask;\nvar _c, _c2;\n$RefreshReg$(_c, \"AddTask$React.memo\");\n$RefreshReg$(_c2, \"AddTask\");","map":{"version":3,"names":["React","useState","addTask","useDispatch","Yup","useForm","jsxDEV","_jsxDEV","validationSchema","object","name","string","required","description","max","AddTask","_s","memo","_c","dispatch","register","handleSubmit","reset","errors","setErrors","handleAddTask","data","validate","abortEarly","done","id","Date","now","err","ValidationError","newErrors","inner","forEach","error","path","message","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","_c2","$RefreshReg$"],"sources":["/Users/milenacharchyan/Desktop/list/src/pages/AddTask/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { addTask, selectTask } from \"../../features/task/taskSlice\";\nimport { useDispatch } from \"react-redux\";\nimport * as Yup from 'yup';\nimport { useForm } from \"react-hook-form\";\nimport { ITask } from \"../../type/type\";\nimport './style.css'\ninterface FormValues {\n    name: string;\n    description: string;\n  }\n    \nconst validationSchema = Yup.object({\n    name: Yup.string().required('Task name is required'),\n    description: Yup.string().max(200, 'Description must be at most 200 characters long').required(\"....\"),\n  });\n\nexport const AddTask: React.FC = React.memo((): JSX.Element => {\n    const dispatch=useDispatch()\n    const { register, handleSubmit, reset } = useForm<ITask>();\n\n    const [errors, setErrors] = useState<{ name?: string; description?: string }>({});\n\n    const handleAddTask = async(data: ITask) => {\n        try {\n            await validationSchema.validate(data, { abortEarly: false });\n            \n            dispatch(addTask({ ...data, done:false, id:Date.now() }));\n            reset(); \n            setErrors({}); \n          } catch (err) {\n            if (err instanceof Yup.ValidationError) {\n              const newErrors: { name?: string; description?: string } = {};\n              err.inner.forEach((error) => {\n                if (error.path === 'name') newErrors.name = error.message;\n                if (error.path === 'description') newErrors.description = error.message;\n              });\n              setErrors(newErrors);\n            }\n          }\n      };\n    \n      return (\n        \n        <form onSubmit={handleSubmit(handleAddTask)} className=\"add-task-container\">\n            <h4>add Tas</h4>\n          <input\n            type=\"text\"\n            placeholder=\"Task Name\"\n            {...register('name')}\n            className=\"input\"\n          />\n          {errors.name && <span className=\"error\">{errors.name}</span>} \n          <textarea\n            placeholder=\"Task Description\"\n            {...register('description')}\n            className=\"textarea\"\n          />\n          {errors.description && <span className=\"error\">{errors.description}</span>}\n    \n          <button type=\"submit\" className=\"add-task-btn\">Add Task</button>\n        </form>\n      );\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}