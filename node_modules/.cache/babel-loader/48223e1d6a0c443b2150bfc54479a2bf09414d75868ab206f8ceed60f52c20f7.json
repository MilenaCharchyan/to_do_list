{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasks: [{\n    id: 1,\n    name: \"tas1\",\n    description: \"tasts 1\",\n    done: false\n  }]\n};\nconst taskSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    addTask: (sƒƒtate, action) => {\n      state.tasks.push(action.payload);\n    },\n    toggleDone: (state, action) => {\n      const task = state.tasks.find(task => task.id !== action.payload);\n      if (task) {\n        task.done = !task.done;\n      }\n    },\n    deleteTask: (state, action) => {\n      state.tasks = state.tasks.filter(task => task.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTask,\n  toggleDone,\n  deleteTask\n} = taskSlice.actions;\nexport const selectTask = state => state.task;\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","tasks","id","name","description","done","taskSlice","reducers","addTask","sƒƒtate","action","state","push","payload","toggleDone","task","find","deleteTask","filter","actions","selectTask","reducer"],"sources":["/Users/milenacharchyan/Desktop/list/src/features/task/taskSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { ITask } from \"../../type/type\";\nimport { RootState } from \"../../app/store\";\nconst initialState:{tasks:ITask[]}={\n    tasks:[{\n        id:1, name:\"tas1\", description:\"tasts 1\", done:false\n    }]\n};\nconst taskSlice=createSlice({\n    name:'tasks',\n    initialState,\n    reducers:{\n        addTask:(sƒƒtate,action:PayloadAction<ITask>)=>{\n            state.tasks.push(action.payload);\n        },\n        toggleDone:(state,action:PayloadAction<number>)=>{\n            const task= state.tasks.find((task)=>task.id !==action.payload);\n            if (task) {\n                task.done=!task.done; \n                \n            }\n        },\n        deleteTask:(state,action:PayloadAction<number>)=>{\n            state.tasks =  state.tasks.filter(task=>task.id!==action.payload)\n        },\n    },\n});\n\nexport const{addTask,toggleDone,deleteTask}=taskSlice.actions;\nexport const selectTask = (state:RootState)=>state.task\nexport default taskSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAG7D,MAAMC,YAA4B,GAAC;EAC/BC,KAAK,EAAC,CAAC;IACHC,EAAE,EAAC,CAAC;IAAEC,IAAI,EAAC,MAAM;IAAEC,WAAW,EAAC,SAAS;IAAEC,IAAI,EAAC;EACnD,CAAC;AACL,CAAC;AACD,MAAMC,SAAS,GAACP,WAAW,CAAC;EACxBI,IAAI,EAAC,OAAO;EACZH,YAAY;EACZO,QAAQ,EAAC;IACLC,OAAO,EAACA,CAACC,OAAO,EAACC,MAA2B,KAAG;MAC3CC,KAAK,CAACV,KAAK,CAACW,IAAI,CAACF,MAAM,CAACG,OAAO,CAAC;IACpC,CAAC;IACDC,UAAU,EAACA,CAACH,KAAK,EAACD,MAA4B,KAAG;MAC7C,MAAMK,IAAI,GAAEJ,KAAK,CAACV,KAAK,CAACe,IAAI,CAAED,IAAI,IAAGA,IAAI,CAACb,EAAE,KAAIQ,MAAM,CAACG,OAAO,CAAC;MAC/D,IAAIE,IAAI,EAAE;QACNA,IAAI,CAACV,IAAI,GAAC,CAACU,IAAI,CAACV,IAAI;MAExB;IACJ,CAAC;IACDY,UAAU,EAACA,CAACN,KAAK,EAACD,MAA4B,KAAG;MAC7CC,KAAK,CAACV,KAAK,GAAIU,KAAK,CAACV,KAAK,CAACiB,MAAM,CAACH,IAAI,IAAEA,IAAI,CAACb,EAAE,KAAGQ,MAAM,CAACG,OAAO,CAAC;IACrE;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAK;EAACL,OAAO;EAACM,UAAU;EAACG;AAAU,CAAC,GAACX,SAAS,CAACa,OAAO;AAC7D,OAAO,MAAMC,UAAU,GAAIT,KAAe,IAAGA,KAAK,CAACI,IAAI;AACvD,eAAeT,SAAS,CAACe,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}